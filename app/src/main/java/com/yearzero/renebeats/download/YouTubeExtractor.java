package com.yearzero.renebeats.download;import androidx.annotation.NonNull;import org.apache.commons.lang3.ObjectUtils;import java.io.Serializable;import lombok.Getter;import lombok.Setter;public class YouTubeExtractor {    @Getter    @Setter    public static class Format implements Serializable {        private static final long serialVersionUID = 1300L;        private int itag;        private String ext;        private int height = -1;        private int fps = 30;        private at.huber.youtubeExtractor.Format.VCodec vCodec;        private at.huber.youtubeExtractor.Format.ACodec aCodec;        private int audioBitrate = -1;        private boolean isDashContainer;        private boolean isHlsContent;        Format() {}        public Format(int itag, String ext, int height, int fps, at.huber.youtubeExtractor.Format.VCodec vCodec, at.huber.youtubeExtractor.Format.ACodec aCodec, int audioBitrate, boolean isDashContainer, boolean isHlsContent) {            this.itag = itag;            this.ext = ext;            this.height = height;            this.fps = fps;            this.vCodec = vCodec;            this.aCodec = aCodec;            this.audioBitrate = audioBitrate;            this.isDashContainer = isDashContainer;            this.isHlsContent = isHlsContent;        }        public Format(at.huber.youtubeExtractor.Format data) {            this(data.getItag(), data.getExt(), data.getHeight(), data.getFps(), data.getVideoCodec(), data.getAudioCodec(), data.getAudioBitrate(), data.isDashContainer(), data.isHlsContent());        }        @Override        public boolean equals(Object o) {            if (this == o) return true;            if (o == null || getClass() != o.getClass()) return false;            Format format = (Format) o;            if (itag != format.itag) return false;            if (height != format.height) return false;            if (fps != format.fps) return false;            if (audioBitrate != format.audioBitrate) return false;            if (isDashContainer != format.isDashContainer) return false;            if (isHlsContent != format.isHlsContent) return false;            if (ObjectUtils.notEqual(ext, format.ext)) return false;            if (vCodec != format.vCodec) return false;            return aCodec == format.aCodec;        }        @Override        public int hashCode() {            int result = itag;            result = 31 * result + (ext != null ? ext.hashCode() : 0);            result = 31 * result + height;            result = 31 * result + fps;            result = 31 * result + (vCodec != null ? vCodec.hashCode() : 0);            result = 31 * result + (aCodec != null ? aCodec.hashCode() : 0);            result = 31 * result + audioBitrate;            result = 31 * result + (isDashContainer ? 1 : 0);            result = 31 * result + (isHlsContent ? 1 : 0);            return result;        }        @Override        @NonNull        public String toString() {            return "Format{" +                    "itag=" + itag +                    ", ext='" + ext + '\'' +                    ", height=" + height +                    ", fps=" + fps +                    ", vCodec=" + vCodec +                    ", aCodec=" + aCodec +                    ", audioBitrate=" + audioBitrate +                    ", isDashContainer=" + isDashContainer +                    ", isHlsContent=" + isHlsContent +                    '}';        }    }    @Getter    public static class VideoMeta implements Serializable {        private static final long serialVersionUID = 1200L;        private static final String IMAGE_BASE_URL = "http://i.ytimg.com/vi/";        private String videoId;        private String title;        private String author;        private String channelId;        private long videoLength;        private long viewCount;        private boolean isLiveStream;        VideoMeta(String videoId, String title, String author, String channelId, long videoLength, long viewCount, boolean isLiveStream) {            this.videoId = videoId;            this.title = title;            this.author = author;            this.channelId = channelId;            this.videoLength = videoLength;            this.viewCount = viewCount;            this.isLiveStream = isLiveStream;        }        VideoMeta(at.huber.youtubeExtractor.VideoMeta data) {            this(data.getVideoId(), data.getTitle(), data.getAuthor(), data.getChannelId(), data.getVideoLength(), data.getViewCount(), data.isLiveStream());        }        // 120 x 90        String getThumbUrl() { return IMAGE_BASE_URL + videoId + "/default.jpg"; }        // 320 x 180        String getMqImageUrl() { return IMAGE_BASE_URL + videoId + "/mqdefault.jpg"; }        // 480 x 360        String getHqImageUrl() { return IMAGE_BASE_URL + videoId + "/hqdefault.jpg"; }        // 640 x 480        String getSdImageUrl() { return IMAGE_BASE_URL + videoId + "/sddefault.jpg"; }        // Max Res        String getMaxResImageUrl() { return IMAGE_BASE_URL + videoId + "/maxresdefault.jpg"; }        @Override        public boolean equals(Object o) {            if (this == o) return true;            if (o == null || getClass() != o.getClass()) return false;            VideoMeta videoMeta = (VideoMeta) o;            if (videoLength != videoMeta.videoLength) return false;            if (viewCount != videoMeta.viewCount) return false;            if (isLiveStream != videoMeta.isLiveStream) return false;            if (ObjectUtils.notEqual(videoId, videoMeta.videoId))                return false;            if (ObjectUtils.notEqual(title, videoMeta.title)) return false;            if (ObjectUtils.notEqual(author, videoMeta.author))                return false;            return !ObjectUtils.notEqual(channelId, videoMeta.channelId);        }        @Override        public int hashCode() {            int result = videoId != null ? videoId.hashCode() : 0;            result = 31 * result + (title != null ? title.hashCode() : 0);            result = 31 * result + (author != null ? author.hashCode() : 0);            result = 31 * result + (channelId != null ? channelId.hashCode() : 0);            result = 31 * result + (int) (videoLength ^ (videoLength >>> 32));            result = 31 * result + (int) (viewCount ^ (viewCount >>> 32));            result = 31 * result + (isLiveStream ? 1 : 0);            return result;        }        @Override        @NonNull        public String toString() {            return "VideoMeta{" +                    "videoId='" + videoId + '\'' +                    ", title='" + title + '\'' +                    ", author='" + author + '\'' +                    ", channelId='" + channelId + '\'' +                    ", videoLength=" + videoLength +                    ", viewCount=" + viewCount +                    ", isLiveStream=" + isLiveStream +                    '}';        }    }    @Getter    public static class YtFile implements Serializable {        private static final long serialVersionUID = 1100L;        private Format format;        private String url = "";        YtFile() {}        YtFile(Format format, String url) {            this.format = format;            this.url = url;        }        YtFile(at.huber.youtubeExtractor.YtFile data) {            this(new Format(data.getFormat()), data.getUrl());        }        public boolean equals(Object o) {            if (this == o) {                return true;            } else if (o != null && this.getClass() == o.getClass()) {                YtFile ytFile = (YtFile) o;                if (this.format != null) {                    if (this.format.equals(ytFile.getFormat())) {                        return this.url != null ? this.url.equals(ytFile.getUrl()) : ytFile.getUrl() == null;                    }                } else if (ytFile.getFormat() == null) {                    return this.url != null ? this.url.equals(ytFile.getUrl()) : ytFile.getUrl() == null;                }                return false;            } else {                return false;            }        }        public int hashCode() {            int result = this.format != null ? this.format.hashCode() : 0;            result = 31 * result + (this.url != null ? this.url.hashCode() : 0);            return result;        }        @NonNull        public String toString() {            return "YtFile{format=" + this.format + ", url='" + this.url + '\'' + '}';        }    }}